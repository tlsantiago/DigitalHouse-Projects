!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@angular/common")):"function"==typeof define&&define.amd?define("primeng/inputtextarea",["exports","@angular/core","@angular/forms","@angular/common"],t):t(((e=e||self).primeng=e.primeng||{},e.primeng.inputtextarea={}),e.ng.core,e.ng.forms,e.ng.common)}(this,(function(e,t,n,i){"use strict";var o=function(){function e(e,n){this.el=e,this.ngModel=n,this.onResize=new t.EventEmitter}return e.prototype.ngDoCheck=function(){this.updateFilledState(),this.autoResize&&this.resize()},e.prototype.onInput=function(e){this.updateFilledState(),this.autoResize&&this.resize(e)},e.prototype.updateFilledState=function(){this.filled=this.el.nativeElement.value&&this.el.nativeElement.value.length||this.ngModel&&this.ngModel.model},e.prototype.onFocus=function(e){this.autoResize&&this.resize(e)},e.prototype.onBlur=function(e){this.autoResize&&this.resize(e)},e.prototype.resize=function(e){this.el.nativeElement.style.height="auto",this.el.nativeElement.style.height=this.el.nativeElement.scrollHeight+"px",parseFloat(this.el.nativeElement.style.height)>=parseFloat(this.el.nativeElement.style.maxHeight)?(this.el.nativeElement.style.overflowY="scroll",this.el.nativeElement.style.height=this.el.nativeElement.style.maxHeight):this.el.nativeElement.style.overflow="hidden",this.onResize.emit(e||{})},e.ctorParameters=function(){return[{type:t.ElementRef},{type:n.NgModel,decorators:[{type:t.Optional}]}]},e.decorators=[{type:t.Directive,args:[{selector:"[pInputTextarea]",host:{"[class.p-inputtextarea]":"true","[class.p-inputtext]":"true","[class.p-component]":"true","[class.p-filled]":"filled","[class.p-inputtextarea-resizable]":"autoResize"}}]}],e.ctorParameters=function(){return[{type:t.ElementRef},{type:n.NgModel,decorators:[{type:t.Optional}]}]},e.propDecorators={autoResize:[{type:t.Input}],onResize:[{type:t.Output}],onInput:[{type:t.HostListener,args:["input",["$event"]]}],onFocus:[{type:t.HostListener,args:["focus",["$event"]]}],onBlur:[{type:t.HostListener,args:["blur",["$event"]]}]},e}(),s=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[i.CommonModule],exports:[o],declarations:[o]}]}],e}();e.InputTextarea=o,e.InputTextareaModule=s,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=primeng-inputtextarea.umd.min.js.map